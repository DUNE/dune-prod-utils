[global]
group      = dune
experiment = dune
wrapper = file:///${FIFE_UTILS_DIR}/libexec/fife_wrap
version = v06_85_00
quals   = e15:prof
utilversion = v07_00_01
utilquals   = e17:prof
basename = generic
tailname = reco
outname = %(basename)s%(tailname)s
recofclfile = reco.fcl
#it is expected that the user will configure this with an over ride flag.
nevents = 1
#It is expected that the user will configure this with an over ride flag.
tardir = /pnfs/dune/resilient/users/dunepro
tarfile = file_name
logdir  = generic
#It is expected that the user will configure this with an over ride flag. 
nskip  = 0
site_prefix = ThisMustBeOverridden

[env_pass]
#IFDH_DEBUG = 1
SAM_EXPERIMENT=%(experiment)s
SAM_GROUP=%(group)s
SAM_STATION=%(experiment)s
IFDH_CP_MAXRETRIES=2
XRD_CONNECTIONRETRY=32
XRD_REQUESTTIMEOUT=3600
XRD_REDIRECTLIMIT=255

[submit]
G          = %(group)s
subgroup   = prod_keepup
N          = 1
resource-provides      = usage_model=OPPORTUNISTIC,DEDICATED,OFFSITE
expected-lifetime      = 1h
disk                  = 30GB
memory                 = 4000MB
cpu                    = 2
# We want to use rucio - so sl7 only
# OS = SL6,SL7
OS = SL7
email-to               = kherner@fnal.gov
append_condor_requirements = ((TARGET.has_avx==true)&&(TARGET.HAS_CVMFS_dune_opensciencegrid_org==true)&&(TARGET.CVMFS_dune_opensciencegrid_org_REVISION>=636))
dataset                = ThisMustBeOverridden
f_0 = %(tardir)s/%(tarfile)s

# /pnfs/dune/resilient/users/dunepro/%(metadata_extractor)s
site       = BNL,Caltech,CCIN2P3,CERN,CIEMAT,Clemson,Colorado,FermiGrid,Florida,FNAL,FZU,Liverpool,London,Manchester,Michigan,Nebraska,NIKHEF,NotreDame,Omaha,PIC,RAL,SGrid,SGridECDF,SGridOxford,Sheffield,SURFsara,UCSD,Wisconsin
#site = CCIN2P3,FermiGrid,NIKHEF,SURFsara,BNL

[job_setup]
#debug       = True
find_setups = True
source_1    = /cvmfs/dune.opensciencegrid.org/products/dune/setup_dune.sh
#source_2    = /cvmfs/fermilab.opensciencegrid.org/products/common/other/rucio-client/sl7/1.19/bin/activate
setup_1     = dunetpc %(version)s -q %(quals)s
setup_2     = dune_oslibs v1_0_0
multifile   = True
prescript_1 = tar xzpf ${CONDOR_DIR_INPUT}/%(tarfile)s
#postscript_1 = cp ${JSB_TMP}/JOBSUB_LOG_FILE ./%(basename)s_gen_g4_detsim_reco_${CLUSTER}_${PROCESS}.out
#postscript_2 = cp ${JSB_TMP}/JOBSUB_ERR_FILE ./%(basename)s_gen_g4_detsim_reco_${CLUSTER}_${PROCESS}.err
postscript_1 = mv $(ls *%(tailname)s.root | grep -v hist) $(echo $(ls *%(tailname)s.root | grep -v hist) | sed -r -e "s/\.root/_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}\.root/")
postscript_2 = ./extractor_prod.py --infile $(ls *%(tailname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}.root) --no_crc --appname reco --appversion %(version)s --appfamily art --campaign DC3 > $(ls *%(tailname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}.root).json
#postscript_3 = PYTHONHOME="" LD_LIBRARY_PATH=$(dropit -p "${LD_LIBRARY_PATH}" ${PYTHON_LIB}) ifdh cp -D $(ls *%(tailname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}.root) srm://ccsrm02.in2p3.fr:8443/pnfs/in2p3.fr/data/dune/prodtest/
postscript_3 = ./copy_IN2P3.sh %(site_prefix)s
#postscript_3 = source /cvmfs/fermilab.opensciencegrid.org/products/common/other/rucio-client/sl7/1.19/bin/activate
#postscript_4 = export OLD_LD_LIBRARY_PATH=$LD_LIBRARY_PATH
#postscript_5 = export LD_LIBRARY_PATH=$(dropit -p "${LD_LIBRARY_PATH}" ${PYTHON_LIB})
#postscript_6 = ifdh cp -D $(ls *%(tailname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}.root) srm://ccsrm02.in2p3.fr:8443/pnfs/in2p3.fr/data/dune/prodtest/
#postscript_7 = export LD_LIBRARY_PATH=$OLD_LD_LIBRARY_PATH
#postscript_8 = export PYTHONHOME=
#postscript_9 = setup dunetpc %(version)s -q %(quals)s

export       = FILETIMESTAMP=$(date +%%Y%%m%%dT%%H%%M%%S)

[sam_consumer]
limit       = 1
appvers	    = %(version)s
schema      = root
appname     = reco
appfamily   = art

[executable]
name      = lar
arg_1     = -c
arg_2     = %(recofclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %%ifb_skip%(nskip)s_%(tailname)s.root
arg_7     = --nskip
arg_8     = %(nskip)s

[job_output]
addoutput = *_%(tailname)s_*.root
#rename      = unique
dest         = /path/to/out
declare_metadata = True
metadata_extractor = json
add_location = False

#[job_output_1]
#addoutput = *%(basename)s*.out
##rename      = unique
#dest         = %(logdir)s
#declare_metadata = False
#add_location = False
#
#[job_output_2]
#addoutput = *%(basename)s*.err
##rename      = unique
#dest         = %(logdir)s
#declare_metadata = False
#add_location = False

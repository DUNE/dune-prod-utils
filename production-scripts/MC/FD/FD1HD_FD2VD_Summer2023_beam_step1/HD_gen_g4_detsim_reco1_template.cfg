
[global]
group      = dune
experiment = dune
wrapper = file:///${FIFE_UTILS_DIR}/libexec/fife_wrap
version = v06_85_00
quals   = e15:prof
utilversion = v07_00_01
utilquals   = e17:prof
basename = generic
genfclfile = gen.fcl
#It is expected that the user will configure this with an override flag.
g4fclfile = g4.fcl
#It is expected that the user will configure this with an override flag.
detsimfclfile = detsim.fcl
recofclfile = reco.fcl
#It is expected that the user will configure this with an override flag.
#recofclfile = reco.fcl
#It is expected that the user will configure this with an override flag.
tardir = /pnfs/dune/resilient/users/dunepro
tarfile = file_name
logdir    = generic
#tailname  = gen_g4_detsim_reco
tailname  = gen_g4_detsim_hitreco
first_run = \${CLUSTER}
first_subrun = 1
first_enum = \$\(\(\$PROCESS*%(nevents)s+1\)\)
first_event = %(first_run)s:%(first_subrun)s:%(first_enum)s
variation= fardet-hd
#outname = %(basename)s_%(variation)s
outname = %(basename)s
nutype = override_me
campaign = override_me
out_ana_dir_base=override_me

#pandoradir = %(out_ana_dir_base)s/%(variation)s/%(nutype)s/pandora/\${CLUSTER}/
pandoradir = override_me
#validationdir= %(out_ana_dir_base)s/%(variation)s/%(nutype)s/validation/\${CLUSTER}/
#out_ana_dir = %(out_ana_dir_base)s/%(variation)s/%(nutype)s/anatree/\${CLUSTER}/

inputfile  = override_me
nskip      = ${PROCESS}
baseskip   = 0
requestid = override_me
photonlib_dir = override_me
# if used, mintime MUST be in seconds!
mintime       = 0
anafclfile = override_me
#reconame = %(campaign)s_FDHDVD_RITM1780305 
reconame = %(campaign)s_fd_mc_2023a
fclfile= override_me

[env_pass]
#IFDH_DEBUG = 1
SAM_EXPERIMENT=%(experiment)s
SAM_GROUP=%(group)s
SAM_STATION=%(experiment)s
IFDH_CP_MAXRETRIES=2
XRD_CONNECTIONRETRY=32
XRD_REQUESTTIMEOUT=3600
XRD_REDIRECTLIMIT=255
XRD_LOADBALANCERTTL=7200
IFDH_GRIDFTP_EXTRA=-cd

[submit]
G          = %(group)s
subgroup   = prod_mcsim
N          = 1
expected-lifetime      = 2h
disk                   = 6GB
memory                 = 2500MB
#OS                     = SL7
email-to               = kherner@fnal.gov
append_condor_requirements = \(\(TARGET.has_avx==true\)\&\&\(\(\(TARGET.HAS_CVMFS_dune_opensciencegrid_org==true\)\&\&\(TARGET.CVMFS_dune_opensciencegrid_org_REVISION\>=1381\)\&\&\(TARGET.HAS_CVMFS_dune_osgstorage_org==true\)\&\&\(TARGET.HAS_cvmfs_fifeuser1_opensciencegrid_org==true\&\&TARGET.HAS_cvmfs_fifeuser2_opensciencegrid_org==true\&\&TARGET.HAS_cvmfs_fifeuser3_opensciencegrid_org==true\&\&TARGET.HAS_cvmfs_fifeuser4_opensciencegrid_org==true\)\)\|\|\(\(TARGET.GLIDEIN_Site==\"T3_US_NERSC\"\)\|\|\(TARGET.GLIDEIN_Site==\"Florida\"\)\)\)\)
singularity-image      = /cvmfs/singularity.opensciencegrid.org/fermilab/fnal-wn-sl7:latest
lines_0                = +FERMIHTC_AutoRelease=True
lines_1                = +FERMIHTC_GraceLifetime=86400
lines_2                = +FERMIHTC_GraceMemory=2500
site       = BNL,BR_CBPF,Bristol,BU,Caltech,CCIN2P3,CERN,CIEMAT,Clemson,FermiGrid,Florida,FNAL,FZU,Lancaster,Liverpool,London,London_QMUL,Manchester,Michigan,MWT2,Nebraska,NIKHEF,NotreDame,PIC,RAL,SGrid,SGridECDF,SGridOxford,Sheffield,SU-ITS,SURFsara,UChicago,UCSD,Wisconsin

[job_setup]
debug       = False
find_setups = True
source_1    = /cvmfs/dune.opensciencegrid.org/products/dune/setup_dune.sh
setup_1     = dunesw %(version)s -q %(quals)s
setup_2     = dune_oslibs v1_0_0
multifile   = False
prescript_1 = cp ${DUNESW_DIR}/fcl/%(genfclfile)s tmpgen.fcl
prescript_2 = mv tmpgen.fcl  %(genfclfile)s
prescript_3 = for fclfile in %(genfclfile)s %(g4fclfile)s %(detsimfclfile)s %(recofclfile)s; do if [ ! -f ${fclfile} ]; then cp ${DUNESW_DIR}/fcl/${fclfile} . ; fi ; echo 'services.FileCatalogMetadata.runType: "fardet-hd"' >> ${fclfile} ; done
prescript_4 = if [ "%(photonlib_dir)s" != "override_me" ]; then ln -s %(photonlib_dir)s . ; fi
prescript_5 = for fclfile in %(recofclfile)s; do if [ ! -f ${fclfile} ]; then cp ${DUNESW_DIR}/fcl/${fclfile} . ; fi ; echo  'outputs.out1.dataTier: "hit-reconstructed"' >> ${fclfile} ; done
#prescript_6 = echo 'outputs.out1.outputCommands: [ "drop *" ]' >> %(anafclfile)s

postscript_1 = cp ${JSB_TMP}/JOBSUB_LOG_FILE ./%(outname)s_gen_g4_${CLUSTER}_${PROCESS}.out
postscript_2 = cp ${JSB_TMP}/JOBSUB_ERR_FILE ./%(outname)s_gen_g4_${CLUSTER}_${PROCESS}.err
postscript_3 = printf '{ "user": "dunepro", "dune_mc.detector_type": "fardet-hd", "dune_mc.generators": "genie", "dune_mc.generators_version": "3.04_00c", "dune_mc.electron_lifetime": "10.4", "dune_mc.mixerconfig": "mixed", "dune_mc.with_cosmics": 0, "dune_mc.beam_flux_ID": "1", "dune_mc.geometry_version": "dune10kt_v4_refactored_1x2x6.gdml", "dune_mc.liquid_flow": "no", "dune_mc.space_charge": "no", "dune_mc.gen_fcl_filename": "%(genfclfile)s", ' > hd_mc.json 
postscript_4 = xrdadler32 $(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(tailname)s.root) | awk '{ print "\"checksum\":\""$1"\","}' >> hd_mc.json
postscript_5 = if [ "%(nutype)s" == "nu" ]; then md=fhc; elif [ "%(nutype)s" == "nue" ]; then md=fhc; elif [ "%(nutype)s" == "nutau" ]; then md=fhc; else md=rhc ; fi; printf '"dune_mc.beam_polarity": "'$md'" }' >> hd_mc.json
postscript_6 = extractor_prod.py --infile $(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(tailname)s.root) --strip_parents --no_crc --appname reco --appversion %(version)s --campaign %(campaign)s --appfamily art --requestid %(requestid)s --input_json hd_mc.json > $(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(tailname)s.root).json 
postscript_7 = sed -i -e "s/DUNE_MC/dune_mc/g" -e "s/DUNE/dune/g" $(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(tailname)s.root).json


#postscript_4 = mv Pandora_Events.pndr $(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(tailname)s.root | grep -v hist_ | sed -e "s/\.root/_Pandora_Events\.pndr/")
#postscript_5 = mv $(ls *Validation.root) $(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(tailname)s.root | grep -v hist_ | sed -e "s/\.root/_Validation\.root/")

#postscript_6 = pandora_metadata.py --infile $(ls *_Pandora_Events.pndr)  --no_crc  --appname reco --appversion %(version)s --campaign %(campaign)s --appfamily art --requestid %(requestid)s --input_json $(ls *_%(tailname)s.root.json) > $(ls *_Pandora_Events.pndr).json

#postscript_7 = pandora_metadata.py --infile $(ls *_Validation.root)  --appfamily art --appname validation --appversion %(version)s --campaign %(campaign)s --no_crc --input_json $(ls *_%(tailname)s.root.json) --data_tier root-tuple --file_format rootntuple --strip_parents > $(ls *_Validation.root).json
#postscript_8 = pandora_metadata.py --infile $(ls *_%(ananame)s.root)  --appfamily art --appname anatree --appversion %(version)s --campaign %(campaign)s --no_crc --input_json $(ls *_%(tailname)s.root.json) --data_tier root-tuple --file_format rootntuple --strip_parents > $(ls *_%(ananame)s.root).json
#postscript_9 = sed -i -e "/file_name/ a     \"parents\": [\"$(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(tailname)s.root)\"]," $(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(tailname)s_Validation.root).json
#postscript_10 = sed -i -e "/file_name/ a     \"parents\": [\"$(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(tailname)s.root)\"]," $(ls %(outname)s_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}_%(ananame)s.root).json

#postscript_11=ls *
#postscript_12=echo %(pandoradir)s
#userscript = True
#postscript_7 = mv $(ls hist_*reco.root) $(ls hist_*_reco.root | sed -e "s/\.root/_${CLUSTER}_${PROCESS}_${FILETIMESTAMP}\.root/")
export       = FILETIMESTAMP=$(date -u +%%Y%%m%%dT%%H%%M%%SZ)
ifdh_art   = False
[sam_consumer]
limit       = 20
appvers	    = %(version)s
schema      = root
appname     = g4
appfamily   = art

[executable]
name      = lar
arg_1     = -c
arg_2     = %(genfclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(outname)s_\${CLUSTER}_\${PROCESS}_gen.root
arg_7     = -e
arg_8     = %(first_event)s

[executable_1]
name      = lar
arg_1     = -c
arg_2     = %(g4fclfile)s
arg_3     = -s
arg_4     = %(outname)s_\${CLUSTER}_\${PROCESS}_gen.root
arg_5     = -n
arg_6     = %(nevents)s
arg_7     = -o
arg_8     = %(outname)s_\${CLUSTER}_\${PROCESS}_gen_g4.root

[executable_2]
name      = lar
arg_1     = -c
arg_2     = %(detsimfclfile)s
arg_3     = -s
arg_4     = %(outname)s_\${CLUSTER}_\${PROCESS}_gen_g4.root
arg_5     = -n
arg_6     = %(nevents)s
arg_7     = -o
arg_8     = %(outname)s_\${CLUSTER}_\${PROCESS}_gen_g4_detsim.root

[executable_3]
name      = lar
arg_1     = -c
arg_2     = %(recofclfile)s
arg_3     = -s
arg_4     = %(outname)s_\${CLUSTER}_\${PROCESS}_gen_g4_detsim.root
arg_5     = -n
arg_6     = %(nevents)s
arg_7     = -o
arg_8     = %(outname)s_\${CLUSTER}_\${PROCESS}_\\\\\\\${FILETIMESTAMP}_%(tailname)s.root


#[executable_4] # original
#name = lar
#arg_1     = -c
#arg_2     = %(anafclfile)s
#arg_3     = -n
#arg_4     = %(nevents)s
#arg_5     = -s
#arg_6     = %(outname)s_\${CLUSTER}_\${PROCESS}_\\\\\\\${FILETIMESTAMP}_%(tailname)s.root
#arg_7     = -o
#arg_8     = random_file_\${CLUSTER}_\${PROCESS}_\\\\\\\${FILETIMESTAMP}.root
#arg_9     = -T
#arg_10    = %(outname)s_\${CLUSTER}_\${PROCESS}_\\\\\\\${FILETIMESTAMP}_%(ananame)s.root

[job_output]
addoutput = *_%(tailname)s.root*
dest         = /path/to/dest
#This should be over-ridden
#declare_metadata = True
#super secret special flag from marc mengel.
#add_to_dataset = _poms_task
metadata_extractor = json
add_location = False


#[job_output_1]
#addoutput = *_Pandora_Events.pndr
#dest          = %(pandoradir)s
#declare_metadata = True
#metadata_extractor = json
#add_location = False

#[job_output_2]
#addoutput = *_%(ananame)s.root
#dest          = %(out_ana_dir)s
#declare_metadata = True
#metadata_extractor = json
#add_location = False

[job_output_3]
addoutput = *_Validation.root
dest          = %(validationdir)s
declare_metadata = True
metadata_extractor = json
add_location = False

#[job_output_4]
#addoutput = *json
#dest          = %(validationdir)s

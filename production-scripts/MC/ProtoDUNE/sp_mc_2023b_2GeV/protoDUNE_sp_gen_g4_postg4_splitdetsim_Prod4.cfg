[global]
group      = dune
experiment = dune
wrapper = file:///${FIFE_UTILS_DIR}/libexec/fife_wrap
version = v07_04_00
quals   = e19:prof
spec    = override_me;
utilversion = v07_03_00
utilquals   = %(quals)s
nevents = 10
pbeam = 2
campaign = PDSPProd4a
basename = %(campaign)s_protoDUNE_sp_g4_p%(pbeam)sGeV
g4stage2name = %(campaign)s_protoDUNE_sp_postg4_p%(pbeam)sGeV
detsimstage1name = %(campaign)s_protoDUNE_sp_detsim_stage1_p%(pbeam)sGeV
detsimstage2name = %(campaign)s_protoDUNE_sp_detsim_p%(pbeam)sGeV
reconame = %(campaign)s_protoDUNE_sp_reco_stage1_p%(pbeam)sGeV
ananame =  %(campaign)s_protoDUNE_sp_ana_p%(pbeam)sGeV
pandoradir= /pnfs/dune/scratch/dunepro/dropbox/%(campaign)s/PandoraFiles_mcc
#fclfile  =  mcc11_gen_protoDune_beam_cosmics_%(spec)s.fcl
fclfile  =  mcc12_gen_protoDune_beam_cosmics_p%(pbeam)sGeV_template.fcl
tarfile = protoDUNE_sp_json.tgz
tardir = /pnfs/dune/resilient/users/dunepro
out_g4_dir = /pnfs/dune/scratch/dunepro/temp/mcc11/mcc11_protoDUNE_sp_gen_g4
out_detsim_dir = /pnfs/dune/scratch/dunepro/temp/mcc11/mcc11_protoDUNE_sp_gen_g4_detsim
out_reco_dir = override_me
out_ana_dir = override_me
pandora_dir = /pnfs/dune/scratch/dunepro/dropbox/PDSPProd4/PandoraFiles_mcc
g4s1fclfile = protoDUNE_refactored_g4_stage1.fcl
g4s2noscefclfile = protoDUNE_refactored_g4_stage2.fcl
g4s2scefclfile = protoDUNE_refactored_g4_stage2_sce_datadriven.fcl
detsims1scefclfile = protoDUNE_refactored_detsim_stage1.fcl
detsims1noscefclfile = protoDUNE_refactored_detsim_stage1.fcl
detsims2fclfile = protoDUNE_refactored_detsim_stage2.fcl
reconoscefclfile = protoDUNE_refactored_reco_stage1.fcl
recoscefclfile = protoDUNE_refactored_reco_35ms_sce_datadriven_stage1.fcl
logdir = /pnfs/dune/scratch/dunepro/log/mcc11/mcc11_protoDUNE_sp_gen_g4
first_run = \${CLUSTER}
first_subrun = %(spec)s
first_enum = \$\(\(\${PROCESS}*%(nevents)s+1\)\)
first_proc = \${PROCESS}
first_event = %(first_run)s:%(first_subrun)s:%(first_enum)s
photonlib_dir = override_me
nersc_libs = override_me
anafclfile = michelremoving.fcl
requestid  = override_me
beamsimprefix = /pnfs/dune/persistent

[env_pass]
#IFDH_DEBUG = 1
SAM_EXPERIMENT=%(experiment)s
SAM_GROUP=%(group)s
SAM_STATION=%(experiment)s
IFDH_CP_MAXRETRIES=2

[submit]
G          = %(group)s
subgroup   = prod_mcsim
N          = 1

resource-provides      = usage_model=OPPORTUNISTIC,DEDICATED,OFFSITE

expected-lifetime      = 8h
disk                  = 32GB
#memory                 = 2500MB
memory                 =6500MB
email-to               = kherner@fnal.gov
#append_condor_requirements = \(\(TARGET.HAS_CVMFS_dune_opensciencegrid_org==true\&\&TARGET.CVMFS_dune_opensciencegrid_org_REVISION\>=1002\&\&TARGET.HAS_CVMFS_larsoft_opensciencegrid_org==true\&\&TARGET.HAS_CVMFS_dune_osgstorage_org==true\&\&TARGET.HAS_CVMFS_fifeuser1_opensciencegrid_org==true\&\&TARGET.HAS_CVMFS_fifeuser2_opensciencegrid_org==true\&\&TARGET.HAS_CVMFS_fifeuser3_opensciencegrid_org==true\&\&TARGET.HAS_CVMFS_fifeuser4_opensciencegrid_org==true\)\|\|\(TARGET.GLIDEIN_Site==\\\"T3_US_NERSC\\\"\)\|\|\(TARGET.GLIDEIN_Site==\\\"Florida\\\"\)\)
append_condor_requirements = \(\(TARGET.HAS_CVMFS_dune_opensciencegrid_org==true\&\&TARGET.CVMFS_fermilab_opensciencegrid_org_REVISION\>=9822\&\&TARGET.CVMFS_dune_opensciencegrid_org_REVISION\>=1015\&\&TARGET.HAS_CVMFS_larsoft_opensciencegrid_org==true\&\&TARGET.HAS_CVMFS_dune_osgstorage_org==true\&\&TARGET.HAS_SINGULARITY==true\)\|\|\(TARGET.GLIDEIN_Site==\\\"T3_US_NERSC\\\"\)\|\|\(TARGET.GLIDEIN_Site==\\\"Florida\\\"\)\)
mail_never                 = True
#f          = %(tardir)s/%(tarfile)s

#site       = CERN,FermiGrid,Colorado,FNAL,Caltech,London,FZU,Sheffield,Nebraska,BU,Michigan,BNL,UCSD,Liverpool,Manchester,Lancaster,SGridOxford,RAL,Florida,BNL
site       = BNL,Caltech,CCIN2P3,CERN,CIEMAT,Colorado,FermiGrid,Florida,FNAL,FZU,Lancaster,Liverpool,London,Manchester,Michigan,Nebraska,NIKHEF,NotreDame,PIC,RAL,SGrid,SGridECDF,SGridOxford,Sheffield,SURFsara,UCSD,Wisconsin
#site = FermiGrid
lines_1    = +SingularityImage=\\\"/cvmfs/singularity.opensciencegrid.org/fermilab/fnal-wn-sl7:latest\\\"
lines_2    = +FERMIHTC_AutoRelease=True
lines_3    = +FERMIHTC_GraceMemory=1500
lines_4    = +FERMIHTC_GraceLifetime=84600

[job_setup]
#debug       = True
find_setups = True
source_1    = /cvmfs/dune.opensciencegrid.org/products/dune/setup_dune.sh
setup_1     = protoduneana %(anaversion)s -q %(quals)s
setup_2     = dunetpc %(version)s -q %(quals)s
setup_3     = duneutil %(utilversion)s -q %(utilquals)s

multifile   = False

#prescript =  tar zxpf ${CONDOR_DIR_INPUT}/%(tarfile)s
prescript_1 = sed -e "/physics.producers.generator.FileName/ s#/pnfs/dune/persistent#%(beamsimprefix)s#" -e "/physics.producers.generator.FileName/ s/_1.root/_%(spec)s.root/"  ${DUNETPC_DIR}/job/%(fclfile)s > %(fclfile)s
prescript_2 = for fclfile in %(fclfile)s %(g4s1fclfile)s %(g4s2scefclfile)s %(g4s2noscefclfile)s %(detsims1scefclfile)s %(detsims1noscefclfile)s %(detsims2fclfile)s %(recoscefclfile)s %(reconoscefclfile)s; do if [ ! -f ${fclfile} ]; then cp ${DUNETPC_DIR}/job/${fclfile} . ; fi ; echo 'services.FileCatalogMetadata.runType: "protodune-sp"' >> ${fclfile} ; done
prescript_3 = cp ${PROTODUNEANA_DIR}/job/%(anafclfile)s .; echo 'services.FileCatalogMetadata.runType: "protodune-sp"' >> %(anafclfile)s
prescript_4 = if [ "%(photonlib_dir)s" != "override_me" ]; then ln -s %(photonlib_dir)s . ; fi 
prescript_5 = if [ "%(nersc_libs)s" != "override_me" ]; then export LD_LIBRARY_PATH=%(nersc_libs)s/%(version)s:%(nersc_libs)s/%(version)s/root/lib:${LD_LIBRARY_PATH} ; export CET_PLUGIN_PATH=%(nersc_libs)s/%(version)s:${CET_PLUGIN_PATH} ; export ROOT_INCLUDE_PATH=%(nersc_libs)s/%(version)s/include:%(nersc_libs)s/%(version)s/root_include:${ROOT_INCLUDE_PATH}; fi

postscript_1 = printf '{ "DUNE_MC.detector_type": "protoDUNE SP", "DUNE_MC.electron_lifetime": "35ms", "DUNE_MC.with_cosmics": 1, "MC.with_cosmics": 1, "DUNE_MC.beam_energy": %(pbeam)s, "beam.momentum": %(pbeam)s, "beam.polarity": 1, "DUNE_MC.liquid_flow": "no", "MC.liquid_flow": "no",\n"DUNE_MC.space_charge": "no", "MC.space_charge": "no",\n"DUNE_MC.generators": "beam_cosmics",\n'> common_sce_off.json
postscript_2 = sed -e "/space_charge/ s/no/yes/g" common_sce_off.json> common_sce_datadriven.json
#-----------------------------------
postscript_3 = xrdadler32 $(ls  %(reconame)s_35ms_sce_off_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root) | awk '{ print "\"checksum\":\""$1"\"}\n"}' >> common_sce_off.json
postscript_4 = extractor_prod.py --infile $(ls *%(reconame)s_35ms_sce_off_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root) --no_crc --strip_parents --appfamily art --appname reco --appversion %(version)s --campaign %(campaign)s --requestid %(requestid)s --input_json common_sce_off.json > $(ls *%(reconame)s_35ms_sce_off_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root).json
postscript_5 = xrdadler32 $(ls  %(reconame)s_35ms_sce_datadriven_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root) | awk '{ print "\"checksum\":\""$1"\"}\n"}' >> common_sce_datadriven.json
postscript_6 = extractor_prod.py --infile $(ls *%(reconame)s_35ms_sce_datadriven_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root) --no_crc --strip_parents --appfamily art --appname reco --appversion %(version)s --campaign %(campaign)s --requestid %(requestid)s --input_json common_sce_datadriven.json > $(ls *%(reconame)s_35ms_sce_datadriven_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root).json
#postscript_7 = pandora_metadata.py --infile $(ls *%(reconame)s_35ms_sce_off*michelremoving.root) --input_json $(ls *%(reconame)s_35ms_sce_off_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root).json --file_format rootntuple --data_tier root-tuple --appfamily art --appname calana --appversion %(version)s --requestid %(requestid)s --strip_parents > $(ls *%(reconame)s_35ms_sce_off*michelremoving.root).json
#postscript_8 = pandora_metadata.py --infile $(ls *%(reconame)s_35ms_sce_datadriven*michelremoving.root) --input_json $(ls *%(reconame)s_35ms_sce_datadriven_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root).json --file_format rootntuple --data_tier root-tuple --appfamily art --appname calana --appversion %(version)s --requestid %(requestid)s --strip_parents > $(ls *%(reconame)s_35ms_sce_datadriven*michelremoving.root).json
#postscript_9 = sed -i -e "/file_name/ a     \"parents\": [\"$(ls *%(reconame)s_35ms_sce_off_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root)\"]," $(ls *%(reconame)s_35ms_sce_off*michelremoving.root).json
#postscript_10 = sed -i -e "/file_name/ a     \"parents\": [\"$(ls *%(reconame)s_35ms_sce_datadriven_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root)\"]," $(ls *%(reconame)s_35ms_sce_datadriven*michelremoving.root).json
postscript_7 = sed -i -e "s/DUNE_MC/dune_mc/g"  $(ls *%(reconame)s_35ms_sce_off_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root).json
postscript_8 = sed -i -e "s/DUNE_MC/dune_mc/g"  $(ls *%(reconame)s_35ms_sce_datadriven_$(eval echo %(first_run)s_%(first_proc)s)_${FILETIMESTAMP}.root).json
export= FILETIMESTAMP=$(date -u +%%Y%%m%%dT%%H%%M%%SZ)

[sam_consumer]
limit       = 10
appvers     = %(version)s
schema      = root
appname     = detsim
appfamily   = art

[executable]
name      = lar
arg_1     = -c
arg_2     = %(fclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -e
arg_6     = %(first_event)s 
arg_7     = -o
arg_8     = gen_only.root

#First stage of g4, without photon libraries for both sce datadriven and sce off
[executable_1]
name      = lar
arg_1     = -c
arg_2     = %(g4s1fclfile)s
arg_3     = -n 
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(basename)s_35ms_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}.root
arg_7     = -s
arg_8     = gen_only.root

#Photon Library executable for data driven
[executable_2]
name      = lar
arg_1     = -c
arg_2     = %(g4s2scefclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(g4stage2name)s_35ms_sce_datadriven_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}.root
arg_7     = -s
arg_8     = %(basename)s_35ms\*.root

#Photon Library executable for sce off
[executable_3]
name      = lar
arg_1     = -c
arg_2     = %(g4s2noscefclfile)s
arg_3     = -n 
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(g4stage2name)s_35ms_sce_off_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}.root 
arg_7     = -s
arg_8     = %(basename)s_35ms\*.root

[executable_4]
name      = lar
arg_1     = -c
arg_2     = %(detsims1scefclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(detsimstage1name)s_35ms_sce_datadriven_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}.root
arg_7     = -s
arg_8     = \*%(g4stage2name)s_35ms_sce_datadriven\*.root

[executable_5]
name      = lar
arg_1     = -c
arg_2     = %(detsims1noscefclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(detsimstage1name)s_35ms_sce_off_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}.root
arg_7     = -s
arg_8     = \*%(g4stage2name)s_35ms_sce_off\*.root

[executable_6]
name      = lar
arg_1     = -c
arg_2     = %(detsims2fclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(detsimstage2name)s_35ms_sce_datadriven_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}.root
arg_7     = -s
arg_8     = \*%(detsimstage1name)s_35ms_sce_datadriven\*.root

[executable_7]
name      = lar
arg_1     = -c
arg_2     = %(detsims2fclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(detsimstage2name)s_35ms_sce_off_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}.root
arg_7     = -s
arg_8     = \*%(detsimstage1name)s_35ms_sce_off\*.root

[executable_8]
name      = lar
arg_1     = -c
arg_2     = %(reconoscefclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(reconame)s_35ms_sce_off_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}.root
arg_7     = -s
arg_8     = \*%(detsimstage2name)s_35ms_sce_off\*.root


[executable_9]
name      = lar
arg_1     = -c
arg_2     = %(recoscefclfile)s
arg_3     = -n
arg_4     = %(nevents)s
arg_5     = -o
arg_6     = %(reconame)s_35ms_sce_datadriven_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}.root
arg_7     = -s
arg_8     = \*%(detsimstage2name)s_35ms_sce_datadriven\*.root


[executable_10]
name = lar
arg_1 = -c
arg_2 = %(anafclfile)s
arg_3 = -n
arg_4 = %(nevents)s 
arg_5 = -s
arg_6 = \*%(reconame)s_35ms_sce_off\*.root

[executable_11]
name = mv
arg_1 = michelremoving.root
arg_2 = %(reconame)s_35ms_sce_off_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}_michelremoving.root


[executable_12]
name = lar
arg_1 = -c
arg_2 = %(anafclfile)s
arg_3 = -n
arg_4 = %(nevents)s 
arg_7 = -s
arg_8 = \*%(reconame)s_35ms_sce_datadriven\*.root

[executable_13]
name = mv
arg_1 = michelremoving.root
arg_2 = %(reconame)s_35ms_sce_datadriven_%(first_run)s_%(first_proc)s_\\\\\\\${FILETIMESTAMP}_michelremoving.root

##----------------------------------------------------------------------
## log and error files
##----------------------------------------------------------------------

#[job_output]
#addoutput = *%(basename)s*.out
#dest         = %(logdir)s/out
#declare_metadata = False
#add_location = False
#
#[job_output_1]
#addoutput = *%(basename)s*.err
#dest         = %(logdir)s/err
#declare_metadata = False
#add_location = False



[job_output]
addoutput = *%(reconame)s_35ms_sce_datadriven*Z.root
addoutput_1 = *%(reconame)s_35ms_sce_datadriven*Z.root.json
dest          = %(out_reco_dir)s/%(spec)s
#declare_metadata = True
metadata_extractor = json
add_location = False
#launch_dest_check = True

[job_output_1]
addoutput = *%(reconame)s_35ms_sce_off*Z.root
addoutput_1 = *%(reconame)s_35ms_sce_off*Z.root.json
dest          = %(out_reco_dir)s/%(spec)s
#declare_metadata = True
metadata_extractor = json
add_location = False
#launch_dest_check = True

# disable Pandora files for PDSPProd4a
#[job_output_4]
#addoutput = *_Pandora_Events.pndr
#dest          = %(pandora_dir)s
#declare_metadata = True
#metadata_extractor = json
#add_location = False
#launch_dest_check = True

#[job_output_2]
#addoutput = *_35ms_sce_*michelremoving.root
#addoutput_1 = *_35ms_sce_*michelremoving.root.json
#dest          = %(out_ana_dir)s/%(spec)s
#declare_metadata = True
#metadata_extractor = json
#add_location = False


##----------------------------------------------------------------------
## Pandora outputs
##----------------------------------------------------------------------

# Pandora is only for the reco stage

#[job_output_4]
#addoutput = *.pndr
#dest          = %(pandoradir)s
#declare_metadata = False
##metadata_extractor = json
#add_location = False

[stage_NERSC]
global.photonlib_dir = /global/cscratch1/sd/dunepro/PhotonPropagation
job_setup.prescript_1 = sed -e "/physics.producers.generator.FileName/ s#/pnfs/dune/persistent/dunepro/#/global/cscratch1/sd/dunepro/%(campaign)s/#" -e "/physics.producers.generator.FileName/ s/_1.root/_%(spec)s.root/"  ${DUNETPC_DIR}/job/%(fclfile)s > %(fclfile)s
job_setup.prescript_5 = sed -e "s#/cvmfs/dune.osgstorage.org/pnfs/fnal.gov/usr/dune/persistent/stash/#/global/cscratch1/sd/dunepro/#" ${DUNETPC_DIR}/job/corsika_protodune.fcl > corsika_protodune.fcl
submit.OS             = SL7
# minimum of 40h remaining to start job
submit.append_condor_requirements = \(\(TARGET.GLIDEIN_ToDie-CurrentTime\)\>=144000\) 
env_pass.UPS_OVERRIDE         = "-H Linux64bit+3.10-2.17"
job_output.launch_dest_check = False
job_output_1.launch_dest_check = False
#job_output_2.launch_dest_check = False
#job_output_3.launch_dest_check = False
#job_output_4.launch_dest_check = False
#job_output_5.launch_dest_check = False

[stage_gendatadriven]
job_setup.postscript_1 = printf '{ "DUNE_MC.detector_type": "protoDUNE SP", "DUNE_MC.electron_lifetime": "35ms", "DUNE_MC.with_cosmics": 1, "MC.with_cosmics": 1, "DUNE_MC.beam_energy": %(pbeam)s, "beam.momentum": %(pbeam)s, "beam.polarity": 1, "DUNE_MC.liquid_flow": "no", "MC.liquid_flow": "no",\n"DUNE_MC.space_charge": "no", "MC.space_charge": "no",\n"DUNE_MC.generators": "beam_cosmics_datadriven" }\n' > common_sce_off.json
